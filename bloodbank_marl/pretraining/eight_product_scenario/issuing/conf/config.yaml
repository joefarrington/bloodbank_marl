defaults:
  - obs_collection/policies/issuing: heuristic_priority_match
  - policies/issuing: single_agent_multi_product_mlp
  - policies/replenishment: heuristic_order_up_to
  - environment: rs_perishable_gymnax_test_double
  - obs_collection/environment: rs_perishable
  - _self_

wandb:
  init:
    project: "rs_eight_product_pretrain_issue"

hydra:
  job:
    chdir: True
  searchpath:
    - pkg://bloodbank_marl.common_config

seed: 12

obs_collection:
  seed: 12345
  num_envs: 20
  samples_per_env: 1000
  environment:
    env_kwargs: ${environment.env_kwargs}
    env_params: ${environment.env_params}
  policies:
    policy_manager:
      _target_: bloodbank_marl.policies.policy_manager.PolicyManager
    replenishment:
      _target_: bloodbank_marl.policies.replenishment.heuristic.SRepPolicyExploreMA
      env_name: ${obs_collection.environment.env_name}
      env_kwargs: ${obs_collection.environment.env_kwargs}
      env_params: ${obs_collection.environment.env_params}
      epsilon: 0.05
      exploration_sampling: "uniform"
      params_min: 0
      params_max: ${environment.env_kwargs.max_order_quantity}
      fixed_policy_params: ${policies.replenishment.fixed_policy_params}
    issuing:
      fixed_policy_params:
        _target_: jax.numpy.array
        object:
          - [0, 4, 2, -1, -1, -1, -1, -1] # O- patient
          - [1, 0, 5, 4, 3, 2, -1, -1] # O+ patient
          - [2, 6, 4, 0, 3, 7, -1, -1] # A- patient
          - [3, 2, 7, 6, 5, 4, -1, -1] # A+ patient
          - [4, 6, 2, 0, 5, 7, -1, -1] # B- patient
          - [5,4, 7, 6, 3, 2, -1, -1] #B+ patient
          - [6, 2, 4, 0, 7, 3, -1, -1] # AB- patient
          - [7, 6, 3, 2, 5, 4, -1, -1] # AB+ patient

labelling_policy: ${obs_collection.policies.issuing}

pretraining:
  num_epochs: 30
  batch_size: 64
  preprocess_observations:
    _target_: bloodbank_marl.utils.pretraining.get_issue_obs
  preprocess_labels: 
    _target_: bloodbank_marl.utils.pretraining.transform_issue_action_to_integer_label
  optimizer:
    _target_: optax.adam
    learning_rate: 0.005
  nn_model:
    _target_: bloodbank_marl.policies.models.flax_deterministic.IssueMultiProductPretrainMLP
    n_hidden: ${policies.issuing.model_kwargs.n_hidden}
    preprocess_observation:
      _target_: hydra.utils.get_method
      path: bloodbank_marl.utils.pretraining.passthrough

checkpoint_manager:
  _target_: orbax.checkpoint.CheckpointManager
  directory: "checkpoints"
  checkpointers:
    _target_: orbax.checkpoint.PyTreeCheckpointer
  options:
    _target_: orbax.checkpoint.CheckpointManagerOptions
    max_to_keep: 1
    create: True

evaluation: 
  seed: 67
  eval_freq: 5
  test_evaluator:
    _target_: bloodbank_marl.utils.adapted_single_agent_fitness.AdaptedSingleAgentFitness
    env_name: ${environment.env_name}
    num_env_steps: ${environment.num_env_steps}
    num_rollouts: 1000
    env_kwargs: ${environment.env_kwargs}
    env_params: ${environment.env_params}
    test: True
    n_devices:
    num_warmup_days: ${environment.num_warmup_days}
    gamma: ${environment.gamma}