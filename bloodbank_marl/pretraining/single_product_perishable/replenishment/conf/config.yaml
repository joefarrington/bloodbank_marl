defaults:
  - heuristic_policy: heuristic_order_up_to
  - policies/replenishment: single_agent_single_product_mlp
  - environment: single_product_perishable_gymnax
  - _self_

wandb:
  init:
    project: "de_moor_pretraining"

hydra:
  job:
    chdir: True
  searchpath:
    - pkg://bloodbank_marl.common_config

heuristic_policy:
  fixed_policy_params:
    _target_: jax.numpy.array
    object:
      - [7] #DeMoor m=2, exp2

labelling_policy: ${heuristic_policy}

seed: 12

pretraining:
  num_epochs: 750
  batch_size: 16
  stock_limit: # None for the case with small number of states
  preprocess_observations:
    _target_: bloodbank_marl.utils.pretraining.get_obs
  preprocess_labels: 
    _target_: bloodbank_marl.utils.pretraining.passthrough
  optimizer:
    _target_: optax.adam
    learning_rate: 0.001
  nn_model:
    _target_: bloodbank_marl.policies.models.flax_deterministic.RepDiscretePretrainMLP
    n_hidden: ${policies.replenishment.model_kwargs.n_hidden}
    preprocess_observation:
      _target_: hydra.utils.get_method
      path: bloodbank_marl.utils.pretraining.passthrough

checkpoint_manager:
  _target_: orbax.checkpoint.CheckpointManager
  directory: "checkpoints"
  checkpointers:
    _target_: orbax.checkpoint.PyTreeCheckpointer
  options:
    _target_: orbax.checkpoint.CheckpointManagerOptions
    max_to_keep: 1
    create: True

evaluation: 
  seed: 1337
  eval_freq: 10
  test_evaluator:
    _target_: bloodbank_marl.utils.single_agent_gymnax_fitness.GymnaxFitness
    env_name: ${environment.env_name}
    num_env_steps: ${environment.num_env_steps}
    num_rollouts: 10000
    env_kwargs: ${environment.env_kwargs}
    env_params: ${environment.env_params}
    test: True
    n_devices:
    num_warmup_days: ${environment.num_warmup_days}
    gamma: ${environment.gamma}