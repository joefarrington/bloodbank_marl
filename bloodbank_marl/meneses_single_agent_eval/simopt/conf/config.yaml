defaults:
  - policies/replenishment: heuristic_order_up_to
  - policies/replenishment_policy_params: Cp # Let's say we'll start with the current policy, BUT one parameter is outside the range
  - policies/issuing: heuristic_priority_match
  - environment: meneses_gymnax
  - _self_

wandb:
  init:
    project: "meneses_single_agent_simopt"

hydra:
  job:
    chdir: True
  searchpath:
    # Search paths assume that run_optuna_simopt.py will be run from simopt/
    - file://../conf

param_search:
  sampler:
    _target_: optuna.samplers.NSGAIISampler
    population_size: 20
  max_parallel_trials: 20
  max_iterations: 200
  num_rollouts: 200
  seed: 10
  search_bounds:
    all_params:
      low: 0
      high: 100
  early_stopping_rounds: 10

train_evaluator:
  _target_: bloodbank_marl.utils.single_agent_gymnax_fitness.GymnaxFitness
  env_name: ${environment.env_name}
  num_env_steps: ${environment.num_env_steps}
  num_rollouts: ${param_search.num_rollouts}
  env_kwargs: ${environment.env_kwargs}
  env_params: ${environment.env_params}
  test: False
  n_devices:
  num_warmup_days: ${environment.num_warmup_days}
  gamma: ${environment.gamma}

evaluation: 
  seed: 123 
  test_evaluator:
    _target_: bloodbank_marl.utils.single_agent_gymnax_fitness.GymnaxFitness
    env_name: ${environment.env_name}
    num_env_steps: ${environment.num_env_steps}
    num_rollouts: 1000
    env_kwargs: ${environment.env_kwargs}
    env_params: ${environment.env_params}
    test: True
    n_devices:
    num_warmup_days: ${environment.num_warmup_days}
    gamma: ${environment.gamma}
